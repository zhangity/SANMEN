[交易说明]
	交易名：		取人员兼职部门树
	所属模块：	平台公共
	功能简述：	
	版权所有：	杭州新世纪
	表引用：		
				1、人员信息表【UUM_UU_PERSONINFO】
				2、组织信息表【UUM_UU_ORGINFO】
				3、管理单元表【UUM_UU_MANAGEUNIT】
				4、系统基础数据表【PF_PB_SysDicInfo】
				5、人员兼职部门表【UUM_UU_PERSONDEPTEX】
	版本经历：	
				1、v1.0		廖树平			2015/8/27 15:13:17		创建

[数据库]
	--指定数据库，为空采用默认值，默认为db.properties中列出的第一个库

[IO定义]
	#################################################
	##			常用输入参数
	#################################################
	
	#操作符
	输入.actionflag							TYPEAS		s_type
	
	
	#################################################
	##			表字段对应输入参数
	#################################################
	
	--人员标识
	输入.person_uuid						TYPEAS	s_uuid
	
	--公司标识
	输入.org_uuid								TYPEAS	s_uuid

[临时表]
	--这边列出来的临时表就会在运行期动态创建
	
[临时变量]
	临时.sys_code								TYPEAS	s_code

[业务过程]

	##########################################
	#			1、输入输出检查				 #
	##########################################
	IF 输入.actionflag = ""
		ERROR ":未输入操作标识"
	ENDIF
	IF 输入.person_uuid = ""
		ERROR ":未输入人员标识"
	ENDIF
	IF 输入.org_uuid = ""
		ERROR ":未输入公司标识"
	ENDIF
	
	##########################################
	#			2、主过程前处理				 #
	##########################################
	
	
	##########################################
	#			3、业务主过程			 	 #
	##########################################
	
	SELECT a.sys_code AS SYSCODE
	FROM UUM_UU_ORGINFO a
	WHERE a.org_uuid = 输入.org_uuid
	ENDSELECT
	临时.sys_code = SYSCODE
	
	IF 输入.actionflag = left
		QUERY
			SELECT DISTINCT b.org_uuid AS node_uuid
				, b.org_name AS node_name
				, b.parent_uuid as parent_uuid
				, b.display_order
				, 1 AS typeorder
			FROM UUM_UU_ORGINFO a
			inner join UUM_UU_ORGINFO b on a.parent_uuid = b.org_uuid
			WHERE a.org_uuid = 输入.org_uuid AND a.sysisdelete = '0'
			UNION ALL
			SELECT DISTINCT a.org_uuid AS node_uuid
				, a.org_name AS node_name
				, parent_uuid as parent_uuid
				, a.display_order
				, 1 AS typeorder
			FROM UUM_UU_ORGINFO a
			WHERE a.org_uuid = 输入.org_uuid AND a.sysisdelete = '0'
			UNION ALL
			SELECT DISTINCT a.org_uuid AS node_uuid
				, a.org_name AS node_name
				, a.parent_uuid
				, a.display_order
				, 1 AS typeorder
			FROM UUM_UU_ORGINFO a
				LEFT JOIN UUM_UU_PERSONDEPTEX b ON a.org_uuid = b.depart_uuid AND b.person_uuid = 输入.person_uuid
				LEFT JOIN UUM_UU_PERSONINFO c ON a.org_uuid = c.depart_uuid AND c.person_uuid = 输入.person_uuid
			WHERE a.sys_code LIKE CONCAT(临时.sys_code , "%") AND a.sysisdelete = '0'
						AND b.depart_uuid IS NULL AND a.org_uuid <> 输入.org_uuid
			ORDER BY typeorder, display_order
			ENDSELECT
		ENDQUERY
	ENDIF
	
	IF 输入.actionflag = right
		QUERY			
			SELECT DISTINCT a.org_uuid AS node_uuid
				, a.org_name AS node_name
				, a.parent_uuid
				, a.display_order
				, 1 AS typeorder
			FROM UUM_UU_ORGINFO a
				INNER JOIN UUM_UU_PERSONDEPTEX b ON a.org_uuid = b.depart_uuid
			WHERE a.sysisdelete = '0' and b.person_uuid = 输入.person_uuid
			UNION ALL
			SELECT DISTINCT c.org_uuid AS node_uuid
				, c.org_name AS node_name
				, c.parent_uuid
				, c.display_order
				, 1 AS typeorder
			FROM UUM_UU_ORGINFO a
				INNER JOIN UUM_UU_PERSONDEPTEX b ON a.org_uuid = b.depart_uuid
				INNER JOIN UUM_UU_ORGINFO c on a.parent_uuid = c.org_uuid
			WHERE a.sysisdelete = '0' and b.person_uuid = 输入.person_uuid
			UNION ALL
			SELECT DISTINCT d.org_uuid AS node_uuid
				, d.org_name AS node_name
				, d.parent_uuid
				, d.display_order
				, 1 AS typeorder
			FROM UUM_UU_ORGINFO a
				INNER JOIN UUM_UU_PERSONDEPTEX b ON a.org_uuid = b.depart_uuid
				INNER JOIN UUM_UU_ORGINFO c on a.parent_uuid = c.org_uuid
				INNER JOIN UUM_UU_ORGINFO d on c.parent_uuid = d.org_uuid
			WHERE a.sysisdelete = '0' and b.person_uuid = 输入.person_uuid
			UNION ALL
			SELECT DISTINCT e.org_uuid AS node_uuid
				, e.org_name AS node_name
				, e.parent_uuid
				, e.display_order
				, 1 AS typeorder
			FROM UUM_UU_ORGINFO a
				INNER JOIN UUM_UU_PERSONDEPTEX b ON a.org_uuid = b.depart_uuid
				INNER JOIN UUM_UU_ORGINFO c on a.parent_uuid = c.org_uuid
				INNER JOIN UUM_UU_ORGINFO d on c.parent_uuid = d.org_uuid
				INNER JOIN UUM_UU_ORGINFO e on d.parent_uuid = e.org_uuid
			WHERE a.sysisdelete = '0' and b.person_uuid = 输入.person_uuid
			UNION ALL
			SELECT DISTINCT f.org_uuid AS node_uuid
				, f.org_name AS node_name
				, f.parent_uuid
				, f.display_order
				, 1 AS typeorder
			FROM UUM_UU_ORGINFO a
				INNER JOIN UUM_UU_PERSONDEPTEX b ON a.org_uuid = b.depart_uuid
				INNER JOIN UUM_UU_ORGINFO c on a.parent_uuid = c.org_uuid
				INNER JOIN UUM_UU_ORGINFO d on c.parent_uuid = d.org_uuid
				INNER JOIN UUM_UU_ORGINFO e on d.parent_uuid = e.org_uuid
				INNER JOIN UUM_UU_ORGINFO f on e.parent_uuid = f.org_uuid
			WHERE a.sysisdelete = '0' and b.person_uuid = 输入.person_uuid
			ORDER BY typeorder, display_order
			ENDSELECT
		ENDQUERY
	ENDIF
	
	
	#对操作符进行判断，如果没有输入则提示错误