[交易说明]
	交易名：		取角色功能权限树
	所属模块：	平台公共
	功能简述：	
	版权所有：	杭州新世纪
	表引用：		
				1、角色信息表【UUM_UA_ROLE】
				2、应用信息表【UUM_UA_APPLICATION】
				3、功能信息表【UUM_UA_FUNCTION】
				4、角色功能权限表【UUM_UA_ROLEFUNC】
	版本经历：	
				1、v1.0		廖树平			2015/7/27 11:37:14		创建

[数据库]
	--指定数据库，为空采用默认值，默认为db.properties中列出的第一个库

[IO定义]
	#################################################
	##			常用输入参数
	#################################################
	
	#操作符
	输入.actionflag							TYPEAS	s_mname
	
	
	#################################################
	##			表字段对应输入参数
	#################################################
	
	--角色标识
	输入.role_uuid						TYPEAS	s_uuid
	
	--公司标识
	输入.org_uuid							TYPEAS	s_uuid
	
[临时表]
	--这边列出来的临时表就会在运行期动态创建
	UUM_UA_FUNCTREE_T
	UUM_UA_FUNCTREE_T1
	UUM_UA_FUNCTREE_T2
[临时变量]

[业务过程]

	##########################################
	#			1、输入输出检查				 #
	##########################################
	IF 输入.actionflag = ""
		ERROR ":未输入操作标识"
	ENDIF
	IF 输入.role_uuid = ""
		ERROR ":未输入角色标识"
	ENDIF
	
	##########################################
	#			2、主过程前处理				 #
	##########################################
	DELETE FROM UUM_UA_FUNCTREE_T
	WHERE node_uuid IS NULL OR node_uuid IS NOT NULL
	ENDDELETE
	
	##########################################
	#			3、业务主过程			 	 #
	##########################################
	
	IF 输入.actionflag = "left"
		INSERT INTO UUM_UA_FUNCTREE_T(
		 		node_uuid
		 		, node_code
		 		, node_name
		 		, parent_uuid
		 		, display_order
		 		, node_level)
		SELECT a.app_uuid
				, b.app_code
				, b.app_name
				, '-1'
				, b.display_order
				, 1
		FROM UUM_UA_ROLE a
			INNER JOIN UUM_UA_APPLICATION b ON a.app_uuid = b.app_uuid
		WHERE a.role_uuid = 输入.role_uuid AND b.sysisdelete = '0'
				AND ( 输入.org_uuid = '' OR 输入.org_uuid <> '' AND a.org_uuid = 输入.org_uuid )
		ENDINSERT
		
		INSERT INTO UUM_UA_FUNCTREE_T(
		 		node_uuid
		 		, node_code
		 		, node_name
		 		, parent_uuid
		 		, display_order
		 		, node_level)
		SELECT DISTINCT b.func_uuid
				, b.func_code
				, b.func_name
				, CASE b.parent_uuid WHEN '' THEN b.app_uuid WHEN '-1' THEN b.app_uuid ELSE b.parent_uuid END
				, b.display_order
				, 2
		FROM UUM_UA_ROLE a
			INNER JOIN UUM_UA_FUNCTION b ON a.app_uuid = b.app_uuid
			LEFT JOIN UUM_UA_ROLEFUNC c ON a.role_uuid = c.role_uuid AND b.func_uuid = c.func_uuid
		WHERE a.role_uuid = 输入.role_uuid AND b.sysisdelete = '0' AND b.func_type IN ('U121', 'U122', 'U123')
			AND c.func_uuid IS NULL AND ( 输入.org_uuid = '' OR 输入.org_uuid <> '' AND a.org_uuid = 输入.org_uuid )
		ENDINSERT
		
		INSERT INTO UUM_UA_FUNCTREE_T(
		 		node_uuid
		 		, node_code
		 		, node_name
		 		, parent_uuid
		 		, display_order
		 		, node_level)
		SELECT DISTINCT b.func_uuid
				, b.func_code
				, b.func_name
				, CASE b.parent_uuid WHEN '' THEN b.app_uuid WHEN '-1' THEN b.app_uuid ELSE b.parent_uuid END
				, b.display_order
				, 3
		FROM UUM_UA_ROLE a
			INNER JOIN UUM_UA_FUNCTION b ON a.app_uuid = b.app_uuid
			LEFT JOIN UUM_UA_ROLEFUNC c ON a.role_uuid = c.role_uuid AND b.func_uuid = c.button_uuid
		WHERE a.role_uuid = 输入.role_uuid AND b.sysisdelete = '0' AND b.func_type IN ('U124')
			AND c.button_uuid IS NULL AND ( 输入.org_uuid = '' OR 输入.org_uuid <> '' AND a.org_uuid = 输入.org_uuid )
		ENDINSERT
		
		INSERT INTO UUM_UA_FUNCTREE_T1(
		 		node_uuid
		 		, node_code
		 		, node_name
		 		, parent_uuid
		 		, display_order
		 		, node_level)
		SELECT 
				 node_uuid
		 		, node_code
		 		, node_name
		 		, parent_uuid
		 		, display_order
		 		, node_level
		FROM UUM_UA_FUNCTREE_T
		ENDINSERT
		
		INSERT INTO UUM_UA_FUNCTREE_T2(
		 		node_uuid
		 		, node_code
		 		, node_name
		 		, parent_uuid
		 		, display_order
		 		, node_level)
		SELECT 
				 node_uuid
		 		, node_code
		 		, node_name
		 		, parent_uuid
		 		, display_order
		 		, node_level
		FROM UUM_UA_FUNCTREE_T
		ENDINSERT
		
		
		//将下级已部分授权的上级节点补足
		INSERT INTO UUM_UA_FUNCTREE_T(
		 		node_uuid
		 		, node_code
		 		, node_name
		 		, parent_uuid
		 		, display_order
		 		, node_level)
		SELECT DISTINCT b.func_uuid
				, b.func_code
				, b.func_name
				, CASE b.parent_uuid WHEN '' THEN b.app_uuid WHEN '-1' THEN b.app_uuid ELSE b.parent_uuid END
				, b.display_order
				, CASE m.node_level WHEN 3 THEN 2 ELSE m.node_level END
		FROM UUM_UA_FUNCTREE_T1 m
			INNER JOIN UUM_UA_FUNCTION b ON m.parent_uuid = b.func_uuid
			LEFT JOIN UUM_UA_FUNCTREE_T2 n ON b.func_uuid = n.node_uuid
		WHERE ( m.node_level = 2 OR m.node_level = 3 ) AND n.node_uuid IS NULL
		ENDINSERT

		QUERY
			SELECT m.node_uuid
				, m.node_name
				, m.parent_uuid
				, m.display_order
				, m.node_level AS typeorder
				, m.node_code AS order_code
			FROM UUM_UA_FUNCTREE_T m
			ORDER BY m.node_level, m.node_code, m.display_order
			ENDSELECT
		ENDQUERY
	ENDIF
	
	IF 输入.actionflag = "right"
		QUERY
			SELECT a.app_uuid AS node_uuid
				, b.app_name AS node_name
				, '-1' AS parent_uuid
				, b.display_order
				, 1 AS typeorder
				, b.app_code AS order_code
			FROM UUM_UA_ROLE a
				INNER JOIN UUM_UA_APPLICATION b ON a.app_uuid = b.app_uuid
			WHERE a.role_uuid = 输入.role_uuid
			OPTION 输入.org_uuid <> ""
				a.org_uuid = 输入.org_uuid
			ENDOPTION
			UNION ALL
			SELECT DISTINCT b.func_uuid AS node_uuid
				, b.func_name AS node_name
				, CASE b.parent_uuid WHEN '' THEN b.app_uuid WHEN '-1' THEN b.app_uuid ELSE b.parent_uuid END AS parent_uuid
				, b.display_order
				, 2 AS typeorder
				, b.func_code AS order_code
			FROM UUM_UA_ROLE a
				INNER JOIN UUM_UA_FUNCTION b ON a.app_uuid = b.app_uuid
				INNER JOIN UUM_UA_ROLEFUNC c ON a.role_uuid = c.role_uuid AND b.func_uuid = c.func_uuid
			WHERE a.role_uuid = 输入.role_uuid
			OPTION 输入.org_uuid <> ""
				a.org_uuid = 输入.org_uuid
			ENDOPTION
			UNION ALL
			SELECT DISTINCT b.func_uuid AS node_uuid
				, b.func_name AS node_name
				, CASE b.parent_uuid WHEN '' THEN b.app_uuid WHEN '-1' THEN b.app_uuid ELSE b.parent_uuid END AS parent_uuid
				, b.display_order
				, 3 AS typeorder
				, b.func_code AS order_code
			FROM UUM_UA_ROLE a
				INNER JOIN UUM_UA_FUNCTION b ON a.app_uuid = b.app_uuid
				INNER JOIN UUM_UA_ROLEFUNC c ON a.role_uuid = c.role_uuid AND b.func_uuid = c.button_uuid
			WHERE a.role_uuid = 输入.role_uuid
			OPTION 输入.org_uuid <> ""
				a.org_uuid = 输入.org_uuid
			ENDOPTION
			ORDER BY typeorder, order_code, display_order
			ENDSELECT
		ENDQUERY
	ENDIF
	
	#对操作符进行判断，如果没有输入则提示错误