[交易说明]
	交易名：		取组织用户树
	所属模块：	平台公共
	功能简述：	
	版权所有：	杭州新世纪
	表引用：		
				1、人员信息表【UUM_UU_PERSONINFO】
				2、人员兼职部门表【UUM_UU_PERSONDEPTEX】
				3、组织信息表【UUM_UU_ORGINFO】
				4、管理单元表【UUM_UU_MANAGEUNIT】
				5、用户表【UUM_UU_ACCOUNT】
	版本经历：	
				1、v1.0		廖树平			2015/7/18 16:33:23		创建

[数据库]
	--指定数据库，为空采用默认值，默认为db.properties中列出的第一个库

[IO定义]
	#################################################
	##			常用输入参数
	#################################################
	
	#操作符
	输入.flag								TYPEAS		s_type
	
	
	#################################################
	##			表字段对应输入参数
	#################################################
	
	--管理单元标识
	输入.manage_unit_uuid					TYPEAS	s_uuid

	--操作人员标识
	输入.person_uuid							TYPEAS	s_uuid
	
	--角色标识
	输入.role_uuid								TYPEAS	s_uuid
	
	--上级组织标识
	输入.parent_uuid							TYPEAS	s_uuid
	
	--是否控制权限
	输入.isctrlperm								TYPEAS	s_bool
	
	--是否同步
	输入.issync										TYPEAS	s_bool		
	
	--用户类型
	输入.user_scode								TYPEAS	s_diccode
	
[临时表]
	--这边列出来的临时表就会在运行期动态创建
	
[临时变量]
	--所有中间过程变量均可在此处定义
	临时.sys_code									TYPEAS	s_mname
		 
[业务过程]

	##########################################
	#			1、输入输出检查				 #
	##########################################

	
	##########################################
	#			2、主过程前处理				 #
	##########################################
	
	
	##########################################
	#			3、业务主过程			 	 #
	##########################################
	
	IF 输入.parent_uuid = "" OR 输入.parent_uuid = "-1"
		IF 输入.issync = "1"
		 QUERY
			SELECT a.org_uuid AS node_uuid
				, a.org_code AS node_code
				, a.org_name AS node_name
				, a.parent_uuid
				, a.display_order
				, 1 AS typeorder
			FROM UUM_UU_ORGINFO a
			WHERE a.sysisdelete = '0'
			UNION ALL
			SELECT e.account_uuid AS node_uuid
				, b.person_code AS node_code
				, CONCAT(b.person_name , e.login_name) AS node_name
				, b.depart_uuid AS parent_uuid
				, b.display_order
				, 2 AS typeorder
			FROM UUM_UU_PERSONINFO b
				INNER JOIN UUM_UU_ACCOUNT e ON b.person_uuid = e.user_uuid
			WHERE b.sysisdelete = '0'
			OPTION 输入.user_type <> "" AND 输入.user_type <> "-1"
					e.user_scode = 输入.user_type
			ENDOPTION
			UNION ALL
			SELECT e.account_uuid AS node_uuid
				, d.person_code AS node_code
				, CONCAT(d.person_name , e.login_name) AS node_name
				, c.depart_uuid AS parent_uuid
				, d.display_order
				, 2 AS typeorder
			FROM UUM_UU_PERSONDEPTEX c
				INNER JOIN UUM_UU_PERSONINFO d ON c.person_uuid = d.person_uuid
				INNER JOIN UUM_UU_ACCOUNT e ON d.person_uuid = e.user_uuid
			WHERE d.sysisdelete = '0'
			OPTION 输入.user_type <> "" AND 输入.user_type <> "-1"
					e.user_scode = 输入.user_type
			ENDOPTION
			ORDER BY typeorder, display_order
			ENDSELECT
		 ENDQUERY
		ELSE
		 QUERY
			SELECT a.org_uuid AS node_uuid
				, a.org_code AS node_code
				, a.org_name AS node_name
				, a.parent_uuid
				, a.display_order
				, 1 AS typeorder
			FROM UUM_UU_ORGINFO a
				INNER JOIN UUM_UU_MANAGEUNIT b ON a.org_uuid = b.org_uuid
			WHERE a.sysisdelete = '0' AND b.parent_uuid = '-1'
			ORDER BY a.display_order
			ENDSELECT
		 ENDQUERY
		ENDIF
	ELSE
		IF 输入.issync = "1"
		 SELECT a.sys_code AS sys_code
		 FROM UUM_UU_ORGINFO a
		 WHERE a.org_uuid = 输入.parent_uuid
		 ENDSELECT
		 临时.sys_code = sys_code
		 
		 QUERY
			SELECT a.org_uuid AS node_uuid
				, a.org_code AS node_code
				, a.org_name AS node_name
				, a.parent_uuid
				, a.display_order
				, 1 AS typeorder
			FROM UUM_UU_ORGINFO a
			WHERE a.sys_code LIKE CONCAT(临时.sys_code , "%") AND a.sysisdelete = '0'
			UNION ALL
			SELECT e.account_uuid AS node_uuid
				, b.person_code AS node_code
				, CONCAT(b.person_name , e.login_name) AS node_name
				, b.depart_uuid AS parent_uuid
				, b.display_order
				, 2 AS typeorder
			FROM UUM_UU_PERSONINFO b
				INNER JOIN UUM_UU_ACCOUNT e ON b.person_uuid = e.user_uuid
				INNER JOIN UUM_UU_ORGINFO a ON b.depart_uuid = a.org_uuid
			WHERE a.sys_code LIKE CONCAT(临时.sys_code , "%") AND b.sysisdelete = '0'
			OPTION 输入.user_type <> "" AND 输入.user_type <> "-1"
					e.user_scode = 输入.user_type
			ENDOPTION
			UNION ALL
			SELECT e.account_uuid AS node_uuid
				, d.person_code AS node_code
				, CONCAT(d.person_name , e.login_name) AS node_name
				, c.depart_uuid AS parent_uuid
				, d.display_order
				, 2 AS typeorder
			FROM UUM_UU_PERSONDEPTEX c
				INNER JOIN UUM_UU_PERSONINFO d ON c.person_uuid = d.person_uuid
				INNER JOIN UUM_UU_ACCOUNT e ON d.person_uuid = e.user_uuid
				INNER JOIN UUM_UU_ORGINFO a ON c.depart_uuid = a.org_uuid
			WHERE a.sys_code LIKE CONCAT(临时.sys_code , "%") AND d.sysisdelete = '0'
			OPTION 输入.user_type <> "" AND 输入.user_type <> "-1"
					e.user_scode = 输入.user_type
			ENDOPTION
			ORDER BY typeorder, display_order
			ENDSELECT
		 ENDQUERY	
		ELSE
		 QUERY
			SELECT a.org_uuid AS node_uuid
				, a.org_code AS node_code
				, a.org_name AS node_name
				, a.parent_uuid
				, a.display_order
				, 1 AS typeorder
			FROM UUM_UU_ORGINFO a
			WHERE a.parent_uuid = 输入.parent_uuid AND a.sysisdelete = '0'
			UNION ALL
			SELECT e.account_uuid AS node_uuid
				, b.person_code AS node_code
				, CONCAT(b.person_name , e.login_name) AS node_name
				, b.depart_uuid AS parent_uuid
				, b.display_order
				, 2 AS typeorder
			FROM UUM_UU_PERSONINFO b
				INNER JOIN UUM_UU_ACCOUNT e ON b.person_uuid = e.user_uuid
			WHERE b.depart_uuid = 输入.parent_uuid AND b.sysisdelete = '0'
			OPTION 输入.user_type <> "" AND 输入.user_type <> "-1"
					e.user_scode = 输入.user_type
			ENDOPTION
			UNION ALL
			SELECT e.account_uuid AS node_uuid
				, d.person_code AS node_code
				, CONCAT(d.person_name , e.login_name) AS node_name
				, c.depart_uuid AS parent_uuid
				, d.display_order
				, 2 AS typeorder
			FROM UUM_UU_PERSONDEPTEX c
				INNER JOIN UUM_UU_PERSONINFO d ON c.person_uuid = d.person_uuid
				INNER JOIN UUM_UU_ACCOUNT e ON d.person_uuid = e.user_uuid
			WHERE c.depart_uuid = 输入.parent_uuid AND d.sysisdelete = '0'
			OPTION 输入.user_type <> "" AND 输入.user_type <> "-1"
					e.user_scode = 输入.user_type
			ENDOPTION
			ORDER BY typeorder, display_order
			ENDSELECT
		 ENDQUERY
		ENDIF
	ENDIF
	
	#对操作符进行判断，如果没有输入则提示错误